plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def secretFile = rootProject.file("secret.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jdsdhp.cinepoliapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
        buildConfigField("String", "API_KEY", "\"${secretProperties['API_KEY']}\"")
        buildConfigField("String", "CLIENT_ID", "\"${secretProperties['CLIENT_ID']}\"")
        buildConfigField("String", "CLIENT_SECRET", "\"${secretProperties['CLIENT_SECRET']}\"")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //Core
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.activity:activity-ktx:1.4.0'

    //Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"
    def hilt_lifecycle_view_model_version = '1.0.0-alpha03'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_view_model_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_view_model_version"

    //Room
    def room_version = "2.4.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    //Coroutines
    def coroutines_version = '1.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Lifecycle
    def lifecycle_version = "2.4.0"
    def arch_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigation_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.navigation_version"

    //Network
    def retrofit_version = "2.9.0"
    def okhttp_logging_version = '5.0.0-alpha.3'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //Serialization
    implementation 'com.google.code.gson:gson:2.8.9'

    //Paging
    implementation 'androidx.paging:paging-runtime-ktx:3.1.0'

    //Coil
    implementation "io.coil-kt:coil:1.4.0"

    //UI
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.github.razir.progressbutton:progressbutton:2.1.0'
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'
    implementation 'com.google.android.exoplayer:exoplayer:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.16.1'

    def sheets_version = '2.2.6'
    implementation "com.maxkeppeler.sheets:core:$sheets_version"
    implementation "com.maxkeppeler.sheets:lottie:$sheets_version"
    implementation "com.maxkeppeler.sheets:info:$sheets_version"
    implementation "com.maxkeppeler.sheets:input:$sheets_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}